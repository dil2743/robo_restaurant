
<launch>

<!-- map server -->
  <!-- map file this will be utilised by amcl -->
	<arg name="map_file" default="$(find robo_restaurant)/maps/map.yaml"/>

  <!-- 	he map_server node provides map data as a ROS service to other nodes such as the 	   amcl node. Here, map_server node will locate the map -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

<!-- AMCL Node -->
  <node name="amcl" pkg="amcl" type="amcl" output="screen">

<!-- since the robot is publishing the laser scan data on /robo_restaurant/laser/scan topic (c reffer to robo_restaurant/my_robot/urdf/my_robot.gazebo) -->

	<remap from="scan" to="/robo_restaurant/laser/scan"/>
	<param name="odom_frame_id" value="odom"/>
	<param name="odom_model_type" value="diff-corrected"/>
  	<param name="base_frame_id" value="robot_base"/>
  	<param name="global_frame_id" value="map"/>
     <!-- initial pose of robot -->
	<param name="initial_pose_x" value="1.9"/>
	<param name="initial_pose_y" value="-9.010639"/>
	<param name="initial_pose_a" value="-1.67"/>
  </node>
<!-- Move Base -->
  <node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen">
  <remap from="scan" to="/robo_restaurant/laser/scan"/>
  <param name="base_global_planner" value="navfn/NavfnROS" />
  <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
 <rosparam file="$(find robo_restaurant)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
  <rosparam file="$(find robo_restaurant)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
  <rosparam file="$(find robo_restaurant)/config/local_costmap_params.yaml" command="load" />
  <rosparam file="$(find robo_restaurant)/config/global_costmap_params.yaml" command="load" />
  <rosparam file="$(find robo_restaurant)/config/base_local_planner_params.yaml" command="load" />
  </node>


</launch>
